;  LST file generated by mikroListExporter - v.2.0 
; Date/Time: 12/2/2017 4:24:44 PM
;----------------------------------------------

;Address Opcode 	ASM
0x0000	0xF000EF96  	GOTO        300
_interrupt:
;MyProject.c,11 :: 		void interrupt()
0x0008	0xF015C000  	MOVFF       R0, 21
;MyProject.c,16 :: 		if(INT0IF_Bit==1)
0x000C	0xA2F2      	BTFSS       INT0IF_bit, BitPos(INT0IF_bit+0) 
0x000E	0xD019      	BRA         L_interrupt0
;MyProject.c,19 :: 		Uart1_Write_Text("Up");
0x0010	0x0E16      	MOVLW       ?lstr1_MyProject
0x0012	0x6E2E      	MOVWF       FARG_UART1_Write_Text_uart_text 
0x0014	0x0E00      	MOVLW       hi_addr(?lstr1_MyProject)
0x0016	0x6E2F      	MOVWF       FARG_UART1_Write_Text_uart_text+1 
0x0018	0xD837      	RCALL       _UART1_Write_Text
;MyProject.c,20 :: 		PORTD = 0b00000001;
0x001A	0x0E01      	MOVLW       1
0x001C	0x6E83      	MOVWF       PORTD 
;MyProject.c,21 :: 		Delay_ms(500);
0x001E	0x0E06      	MOVLW       6
0x0020	0x6E0B      	MOVWF       R11, 0
0x0022	0x0E13      	MOVLW       19
0x0024	0x6E0C      	MOVWF       R12, 0
0x0026	0x0EAD      	MOVLW       173
0x0028	0x6E0D      	MOVWF       R13, 0
L_interrupt1:
0x002A	0x2E0D      	DECFSZ      R13, 1, 0
0x002C	0xD7FE      	BRA         L_interrupt1
0x002E	0x2E0C      	DECFSZ      R12, 1, 0
0x0030	0xD7FC      	BRA         L_interrupt1
0x0032	0x2E0B      	DECFSZ      R11, 1, 0
0x0034	0xD7FA      	BRA         L_interrupt1
0x0036	0x0000      	NOP
0x0038	0x0000      	NOP
;MyProject.c,22 :: 		PORTD = 0b00000000;
0x003A	0x6A83      	CLRF        PORTD 
;MyProject.c,23 :: 		newline();
0x003C	0xD83D      	RCALL       _newline
;MyProject.c,24 :: 		INT0IF_Bit = 0;      // Clear INT0IF again to prevent recursive interrupt
0x003E	0x92F2      	BCF         INT0IF_bit, BitPos(INT0IF_bit+0) 
;MyProject.c,25 :: 		}
0x0040	0xD019      	BRA         L_interrupt2
L_interrupt0:
;MyProject.c,29 :: 		else if(INT1IF_Bit==1)
0x0042	0xA0F0      	BTFSS       INT1IF_bit, BitPos(INT1IF_bit+0) 
0x0044	0xD017      	BRA         L_interrupt3
;MyProject.c,32 :: 		Uart1_Write_Text("Down");
0x0046	0x0E19      	MOVLW       ?lstr2_MyProject
0x0048	0x6E2E      	MOVWF       FARG_UART1_Write_Text_uart_text 
0x004A	0x0E00      	MOVLW       hi_addr(?lstr2_MyProject)
0x004C	0x6E2F      	MOVWF       FARG_UART1_Write_Text_uart_text+1 
0x004E	0xD81C      	RCALL       _UART1_Write_Text
;MyProject.c,33 :: 		PORTD.F1 = 1;
0x0050	0x8283      	BSF         PORTD, 1 
;MyProject.c,34 :: 		Delay_ms(500);
0x0052	0x0E06      	MOVLW       6
0x0054	0x6E0B      	MOVWF       R11, 0
0x0056	0x0E13      	MOVLW       19
0x0058	0x6E0C      	MOVWF       R12, 0
0x005A	0x0EAD      	MOVLW       173
0x005C	0x6E0D      	MOVWF       R13, 0
L_interrupt4:
0x005E	0x2E0D      	DECFSZ      R13, 1, 0
0x0060	0xD7FE      	BRA         L_interrupt4
0x0062	0x2E0C      	DECFSZ      R12, 1, 0
0x0064	0xD7FC      	BRA         L_interrupt4
0x0066	0x2E0B      	DECFSZ      R11, 1, 0
0x0068	0xD7FA      	BRA         L_interrupt4
0x006A	0x0000      	NOP
0x006C	0x0000      	NOP
;MyProject.c,35 :: 		PORTD.F1 = 0;
0x006E	0x9283      	BCF         PORTD, 1 
;MyProject.c,36 :: 		newline();
0x0070	0xD823      	RCALL       _newline
;MyProject.c,37 :: 		INT1IF_Bit = 0;      // Clear INT0IF again to prevent recursive interrupt
0x0072	0x90F0      	BCF         INT1IF_bit, BitPos(INT1IF_bit+0) 
;MyProject.c,38 :: 		}
L_interrupt3:
L_interrupt2:
;MyProject.c,39 :: 		}
L_end_interrupt:
L__interrupt9:
0x0074	0xF000C015  	MOVFF       21, R0
0x0078	0x0011      	RETFIE      1
; end of _interrupt
_UART1_Write:
;__Lib_UART_c67.c,58 :: 		
;__Lib_UART_c67.c,59 :: 		
L_UART1_Write3:
0x007A	0xB2AC      	BTFSC       TXSTA, 1 
0x007C	0xD002      	BRA         L_UART1_Write4
;__Lib_UART_c67.c,60 :: 		
0x007E	0x0000      	NOP
0x0080	0xD7FC      	BRA         L_UART1_Write3
L_UART1_Write4:
;__Lib_UART_c67.c,61 :: 		
0x0082	0xFFADC032  	MOVFF       FARG_UART1_Write_data_, TXREG
;__Lib_UART_c67.c,62 :: 		
L_end_UART1_Write:
0x0086	0x0012      	RETURN      0
; end of _UART1_Write
_UART1_Write_Text:
;__Lib_UART_c67.c,66 :: 		
;__Lib_UART_c67.c,67 :: 		
0x0088	0x6A31      	CLRF        UART1_Write_Text_counter_L0 
;__Lib_UART_c67.c,69 :: 		
0x008A	0xFFE9C02E  	MOVFF       FARG_UART1_Write_Text_uart_text, FSR0L
0x008E	0xFFEAC02F  	MOVFF       FARG_UART1_Write_Text_uart_text+1, FSR0H
0x0092	0xF030CFEE  	MOVFF       POSTINC0, UART1_Write_Text_data__L0
;__Lib_UART_c67.c,70 :: 		
L_UART1_Write_Text5:
0x0096	0x5030      	MOVF        UART1_Write_Text_data__L0, 0 
0x0098	0x0A00      	XORLW       0
0x009A	0xE00D      	BZ          L_UART1_Write_Text6
;__Lib_UART_c67.c,71 :: 		
0x009C	0xF032C030  	MOVFF       UART1_Write_Text_data__L0, FARG_UART1_Write_data_
0x00A0	0xDFEC      	RCALL       _UART1_Write
;__Lib_UART_c67.c,72 :: 		
0x00A2	0x2A31      	INCF        UART1_Write_Text_counter_L0, 1 
;__Lib_UART_c67.c,73 :: 		
0x00A4	0x5031      	MOVF        UART1_Write_Text_counter_L0, 0 
0x00A6	0x242E      	ADDWF       FARG_UART1_Write_Text_uart_text, 0 
0x00A8	0x6EE9      	MOVWF       FSR0L 
0x00AA	0x0E00      	MOVLW       0
0x00AC	0x202F      	ADDWFC      FARG_UART1_Write_Text_uart_text+1, 0 
0x00AE	0x6EEA      	MOVWF       FSR0H 
0x00B0	0xF030CFEE  	MOVFF       POSTINC0, UART1_Write_Text_data__L0
;__Lib_UART_c67.c,74 :: 		
0x00B4	0xD7F0      	BRA         L_UART1_Write_Text5
L_UART1_Write_Text6:
;__Lib_UART_c67.c,75 :: 		
L_end_UART1_Write_Text:
0x00B6	0x0012      	RETURN      0
; end of _UART1_Write_Text
_newline:
;MyProject.c,1 :: 		void newline()
;MyProject.c,4 :: 		Uart1_write ('\r');      // \r is the carriage return
0x00B8	0x0E0D      	MOVLW       13
0x00BA	0x6E32      	MOVWF       FARG_UART1_Write_data_ 
0x00BC	0xDFDE      	RCALL       _UART1_Write
;MyProject.c,5 :: 		Uart1_write ('\n');      // \n is the line feed
0x00BE	0x0E0A      	MOVLW       10
0x00C0	0x6E32      	MOVWF       FARG_UART1_Write_data_ 
0x00C2	0xDFDB      	RCALL       _UART1_Write
;MyProject.c,6 :: 		}
L_end_newline:
0x00C4	0x0012      	RETURN      0
; end of _newline
___CC2DW:
;__Lib_System.c,21 :: 		
;__Lib_System.c,23 :: 		
_CC2DL_Loop1:
;__Lib_System.c,24 :: 		
0x00C6	0x0009      	TBLRD*+
;__Lib_System.c,25 :: 		
0x00C8	0xFFE6CFF5  	MOVFF       TABLAT, POSTINC1
;__Lib_System.c,26 :: 		
0x00CC	0x0600      	DECF        R0, 1, 0
;__Lib_System.c,27 :: 		
0x00CE	0xE1FB      	BNZ         _CC2DL_Loop1
;__Lib_System.c,28 :: 		
0x00D0	0x0601      	DECF        R1, 1, 0
;__Lib_System.c,29 :: 		
0x00D2	0xE1F9      	BNZ         _CC2DL_Loop1
;__Lib_System.c,31 :: 		
L_end___CC2DW:
0x00D4	0x0012      	RETURN      0
; end of ___CC2DW
_UART1_Init:
;__Lib_UART_c67.c,15 :: 		
;__Lib_UART_c67.c,18 :: 		
0x00D6	0x0E7A      	MOVLW       _UART1_Write
0x00D8	0x6E26      	MOVWF       _UART_Wr_Ptr 
0x00DA	0x0E00      	MOVLW       hi_addr(_UART1_Write)
0x00DC	0x6E27      	MOVWF       _UART_Wr_Ptr+1 
0x00DE	0x0E32      	MOVLW       FARG_UART1_Write_data_
0x00E0	0x6E28      	MOVWF       _UART_Wr_Ptr+2 
0x00E2	0x0E00      	MOVLW       hi_addr(FARG_UART1_Write_data_)
0x00E4	0x6E29      	MOVWF       _UART_Wr_Ptr+3 
;__Lib_UART_c67.c,19 :: 		
0x00E6	0x0EFF      	MOVLW       _UART1_Read
0x00E8	0x6E2A      	MOVWF       _UART_Rd_Ptr 
0x00EA	0x0EFF      	MOVLW       hi_addr(_UART1_Read)
0x00EC	0x6E2B      	MOVWF       _UART_Rd_Ptr+1 
0x00EE	0x0E00      	MOVLW       0
0x00F0	0x6E2C      	MOVWF       _UART_Rd_Ptr+2 
0x00F2	0x0E00      	MOVLW       0
0x00F4	0x6E2D      	MOVWF       _UART_Rd_Ptr+3 
;__Lib_UART_c67.c,20 :: 		
0x00F6	0x0EFF      	MOVLW       _UART1_Data_Ready
0x00F8	0x6E22      	MOVWF       _UART_Rdy_Ptr 
0x00FA	0x0EFF      	MOVLW       hi_addr(_UART1_Data_Ready)
0x00FC	0x6E23      	MOVWF       _UART_Rdy_Ptr+1 
0x00FE	0x0E00      	MOVLW       0
0x0100	0x6E24      	MOVWF       _UART_Rdy_Ptr+2 
0x0102	0x0E00      	MOVLW       0
0x0104	0x6E25      	MOVWF       _UART_Rdy_Ptr+3 
;__Lib_UART_c67.c,21 :: 		
0x0106	0x0EFF      	MOVLW       _UART1_Tx_Idle
0x0108	0x6E1E      	MOVWF       _UART_Tx_Idle_Ptr 
0x010A	0x0EFF      	MOVLW       hi_addr(_UART1_Tx_Idle)
0x010C	0x6E1F      	MOVWF       _UART_Tx_Idle_Ptr+1 
0x010E	0x0E00      	MOVLW       0
0x0110	0x6E20      	MOVWF       _UART_Tx_Idle_Ptr+2 
0x0112	0x0E00      	MOVLW       0
0x0114	0x6E21      	MOVWF       _UART_Tx_Idle_Ptr+3 
;__Lib_UART_c67.c,23 :: 		
0x0116	0x8AAC      	BSF         TXSTA, 5 
;__Lib_UART_c67.c,24 :: 		
0x0118	0x0E90      	MOVLW       144
0x011A	0x6EAB      	MOVWF       RCSTA 
;__Lib_UART_c67.c,25 :: 		
0x011C	0x8E94      	BSF         TRISC7_bit, BitPos(TRISC7_bit+0) 
;__Lib_UART_c67.c,26 :: 		
0x011E	0x9C94      	BCF         TRISC6_bit, BitPos(TRISC6_bit+0) 
;__Lib_UART_c67.c,28 :: 		
L_UART1_Init0:
0x0120	0xAA9E      	BTFSS       PIR1, 5 
0x0122	0xD003      	BRA         L_UART1_Init1
;__Lib_UART_c67.c,29 :: 		
0x0124	0xF000CFAE  	MOVFF       RCREG, R0
0x0128	0xD7FB      	BRA         L_UART1_Init0
L_UART1_Init1:
;__Lib_UART_c67.c,30 :: 		
L_end_UART1_Init:
0x012A	0x0012      	RETURN      0
; end of _UART1_Init
_main:
0x012C	0x0E55      	MOVLW       85
0x012E	0x6E16      	MOVWF       ?lstr1_MyProject 
0x0130	0x0E70      	MOVLW       112
0x0132	0x6E17      	MOVWF       23 
0x0134	0x6A18      	CLRF        24 
0x0136	0x0E44      	MOVLW       68
0x0138	0x6E19      	MOVWF       ?lstr2_MyProject 
0x013A	0x0E6F      	MOVLW       111
0x013C	0x6E1A      	MOVWF       26 
0x013E	0x0E77      	MOVLW       119
0x0140	0x6E1B      	MOVWF       27 
0x0142	0x0E6E      	MOVLW       110
0x0144	0x6E1C      	MOVWF       28 
0x0146	0x6A1D      	CLRF        29 
;MyProject.c,41 :: 		void main()
;MyProject.c,46 :: 		TRISB = 0xFF;   //button increment-button decrement as input
0x0148	0x0EFF      	MOVLW       255
0x014A	0x6E93      	MOVWF       TRISB 
;MyProject.c,47 :: 		TRISD = 0; //FOR LED
0x014C	0x6A95      	CLRF        TRISD 
;MyProject.c,51 :: 		GIE_Bit = 1;       // Enable all interrupts
0x014E	0x8EF2      	BSF         GIE_bit, BitPos(GIE_bit+0) 
;MyProject.c,53 :: 		INT0IE_Bit = 1;    // INT0 Interrupt Enable
0x0150	0x88F2      	BSF         INT0IE_bit, BitPos(INT0IE_bit+0) 
;MyProject.c,54 :: 		INT0IF_Bit = 0;    // INT0 Interrupt Flag
0x0152	0x92F2      	BCF         INT0IF_bit, BitPos(INT0IF_bit+0) 
;MyProject.c,56 :: 		INT1IE_Bit = 1;    // INT1 Interrupt Enable
0x0154	0x86F0      	BSF         INT1IE_bit, BitPos(INT1IE_bit+0) 
;MyProject.c,57 :: 		INT1IF_Bit = 0;    // INT1 Interrupt Flag
0x0156	0x90F0      	BCF         INT1IF_bit, BitPos(INT1IF_bit+0) 
;MyProject.c,61 :: 		UART1_Init (9600); // Initialize UART with baud rate = 9600
0x0158	0x0E33      	MOVLW       51
0x015A	0x6EAF      	MOVWF       SPBRG 
0x015C	0x84AC      	BSF         TXSTA, 2, 0
0x015E	0xDFBB      	RCALL       _UART1_Init
;MyProject.c,63 :: 		while(1)
L_main5:
;MyProject.c,65 :: 		asm sleep;             // Make PIC 18F452 go to sleep until any interrupt occur and wake it up again
0x0160	0x0003      	SLEEP
;MyProject.c,66 :: 		}
0x0162	0xD7FE      	BRA         L_main5
;MyProject.c,67 :: 		}
L_end_main:
0x0164	0xD7FF      	BRA         $+0
; end of _main
Symbol List:
//** Routines locations **
//ADDRESS    SIZE    PROCEDURE
//----------------------------------------------
0x0008     [114]    _interrupt
0x007A      [14]    _UART1_Write
0x0088      [48]    _UART1_Write_Text
0x00B8      [14]    _newline
0x00C6      [16]    ___CC2DW
0x00D6      [86]    _UART1_Init
0x012C      [58]    _main
//** Variables locations ** 
//ADDRESS    SIZE    VARIABLE
//----------------------------------------------
0x0000       [1]    FLASH_Erase_64_SaveINTCON_L0
0x0000       [1]    EEPROM_Write_SaveINTCON_L0
0x0000       [1]    UART1_Init_tmp_L0
0x0000       [1]    __Lib_SoftI2C_PutZerosToLATScl_temp_scl_L0
0x0000       [1]    R0
0x0000       [1]    __Lib_SoftI2C_PutZerosToLATSda_temp_sda_L0
0x0000       [1]    SPI1_Write_tmp_L0
0x0001       [1]    __Lib_PS2_Wait_Falling_nsample_L0
0x0001       [1]    R1
0x0001       [1]    FLASH_Write_8_i_L0
0x0001       [1]    __Lib_TFT_JPEG_FileRead_i_L0
0x0001       [1]    __Lib_TFT_16bit_JPEG_FileReadBytes_Result_L0
0x0001       [1]    __Lib_TFT_JPEG_FileReadBytes_Result_L0
0x0001       [1]    I2C1_Rd_tmp_L0
0x0001       [2]    FLASH_Read_N_Bytes_i_L0
0x0001       [1]    ispunct_rslt_L0
0x0001       [1]    FLASH_Erase_Write_64_i_L0
0x0001       [1]    __Lib_TFT_16bit_JPEG_FileRead_i_L0
0x0001       [1]    UART1_Read___tmp_UART1_Read_L0
0x0002       [2]    memchr_s_L0
0x0002       [1]    FLASH_Erase_Write_64_j_L0
0x0002       [2]    memcpy_dd_L0
0x0002       [1]    FLASH_Write_8_SaveINTCON_L0
0x0002       [1]    R2
0x0002       [2]    memset_pp_L0
0x0002       [2]    strlen_cp_L0
0x0003       [2]    Ltrim_original_L0
0x0003       [1]    MM_Init_i_L0
0x0003       [2]    __Lib_MmcFat16_f16_toInt_l_L0
0x0003       [1]    R3
0x0003       [2]    memmove_tt_L0
0x0003       [2]    MM_TotalFreeMemSize_Tot_L0
0x0003       [1]    FLASH_Erase_Write_64_SaveINTCON_L0
0x0004       [2]    strncpy_cp_L0
0x0004       [1]    R4
0x0004       [2]    strncat_cp_L0
0x0004       [2]    __Lib_MemManager_MM_GetMemAlign_P_L0
0x0004       [2]    memcpy_ss_L0
0x0004       [2]    strcat_cp_L0
0x0004       [2]    strcpy_cp_L0
0x0004       [2]    frexp_pom_L0
0x0005       [2]    LongIntToHex_input_half_L0
0x0005       [1]    MM_TotalFreeMemSize_i_L0
0x0005       [1]    R5
0x0005       [2]    memmove_ff_L0
0x0005       [2]    LongWordToHex_input_half_L0
0x0005       [2]    Ltrim_p_L0
0x0006       [1]    R6
0x0006       [1]    __Lib_MemManager_MM_GetMemAlign_i_L0
0x0007       [1]    __Lib_TFT_JPEG_GenerateHuffmanTables_bLength_L0
0x0007       [1]    R7
0x0007       [1]    __Lib_TFT_16bit_JPEG_GenerateHuffmanTables_bLength_L0
0x0008       [1]    __Lib_TFT_16bit_JPEG_GenerateHuffmanTables_bTable_L0
0x0008       [1]    R8
0x0008       [1]    __Lib_TFT_JPEG_GenerateHuffmanTables_bTable_L0
0x0009       [4]    __Lib_MmcFat16_f16_toLong_l_L0
0x0009       [1]    R9
0x000A       [1]    R10
0x000B       [1]    R11
0x000C       [1]    R12
0x000D       [1]    R13
0x000E       [1]    R14
0x000F       [1]    R15
0x0010       [1]    R16
0x0011       [1]    R17
0x0012       [1]    R18
0x0013       [1]    R19
0x0014       [1]    R20
0x0016       [3]    ?lstr1_MyProject
0x0019       [5]    ?lstr2_MyProject
0x001E       [4]    _UART_Tx_Idle_Ptr
0x0022       [4]    _UART_Rdy_Ptr
0x0026       [4]    _UART_Wr_Ptr
0x002A       [4]    _UART_Rd_Ptr
0x002E       [2]    FARG_UART1_Write_Text_uart_text
0x0030       [1]    UART1_Write_Text_data__L0
0x0031       [1]    UART1_Write_Text_counter_L0
0x0032       [1]    FARG_UART1_Write_data_
0x0F83       [1]    PORTD
0x0F93       [1]    TRISB
0x0F94       [0]    TRISC7_bit
0x0F94       [0]    TRISC6_bit
0x0F95       [1]    TRISD
0x0F9E       [1]    PIR1
0x0FAB       [1]    RCSTA
0x0FAC       [1]    TXSTA
0x0FAD       [1]    TXREG
0x0FAE       [1]    RCREG
0x0FAF       [1]    SPBRG
0x0FD8       [1]    STATUS
0x0FD9       [1]    FSR2L
0x0FDA       [1]    FSR2H
0x0FDE       [1]    POSTINC2
0x0FE0       [1]    BSR
0x0FE1       [1]    FSR1L
0x0FE2       [1]    FSR1H
0x0FE4       [1]    PREINC1
0x0FE6       [1]    POSTINC1
0x0FE7       [1]    INDF1
0x0FE8       [1]    WREG
0x0FE9       [1]    FSR0L
0x0FEA       [1]    FSR0H
0x0FEE       [1]    POSTINC0
0x0FF0       [0]    INT1IE_bit
0x0FF0       [0]    INT1IF_bit
0x0FF2       [0]    INT0IF_bit
0x0FF2       [0]    GIE_bit
0x0FF2       [0]    INT0IE_bit
0x0FF3       [1]    PRODL
0x0FF4       [1]    PRODH
0x0FF5       [1]    TABLAT
0x0FF6       [1]    TBLPTRL
0x0FF7       [1]    TBLPTRH
0x0FF8       [1]    TBLPTRU
//** Label List: ** 
//----------------------------------------------
  L_interrupt0
  L_interrupt1
  L_interrupt2
  L_interrupt3
  L_interrupt4
  L_main5
  L_main6
  L_end_newline
  _newline
  L_end_interrupt
  _interrupt
  L__interrupt9
  L_end_main
  _main
  _CC2D_Loop1
  _CC2DL_Loop1
  L_loopCA2AWs
  L_loopCCA2AWs
  L_loopCS2Ss
  L_CS2Send
  L_loopCCS2Ss
  L_CCS2Send
  L_loopFZinSWs
  L_longjmp7
  L_end___CC2D
  ___CC2D
  L_end___CC2DW
  ___CC2DW
  L_end___CA2AW
  ___CA2AW
  L_end___CCA2AW
  ___CCA2AW
  L_end___CS2S
  ___CS2S
  L_end___CCS2S
  ___CCS2S
  L_end___FZinS
  ___FZinS
  L_end_____DoIFC
  _____DoIFC
  L_end_Swap
  _Swap
  L_end_setjmp
  _setjmp
  L_end_longjmp
  _longjmp
  L_UART1_Init0
  L_UART1_Init1
  L_UART1_Read2
  L_UART1_Write3
  L_UART1_Write4
  L_UART1_Write_Text5
  L_UART1_Write_Text6
  L_UART1_Read_Text7
  L_UART1_Read_Text8
  L_UART1_Read_Text9
  L_UART1_Read_Text10
  L_UART1_Read_Text11
  L_UART1_Read_Text12
  L_UART1_Read_Text13
  L_UART1_Read_Text14
  L_UART1_Read_Text15
  L_UART_Write_Text16
  L_UART_Write_Text17
  L_UART_Read_Text18
  L_UART_Read_Text19
  L_UART_Read_Text20
  L_UART_Read_Text21
  L_UART_Read_Text22
  L_UART_Read_Text23
  L_UART_Read_Text24
  L_UART_Read_Text25
  L_UART_Read_Text26
  L_end_UART1_Init
  _UART1_Init
  L_end_UART1_Data_Ready
  _UART1_Data_Ready
  L_end_UART1_Read
  _UART1_Read
  L_end_UART1_Tx_Idle
  _UART1_Tx_Idle
  L_end_UART1_Write
  _UART1_Write
  L_end_UART1_Write_Text
  _UART1_Write_Text
  L_end_UART1_Read_Text
  _UART1_Read_Text
  L_end_UART_Set_Active
  _UART_Set_Active
  L_end_UART_Write
  _UART_Write
  L_end_UART_Write_Text
  _UART_Write_Text
  L_end_UART_Read
  _UART_Read
  L_end_UART_Data_Ready
  _UART_Data_Ready
  L_end_UART_Read_Text
  _UART_Read_Text
  L_end_UART_Tx_Idle
  _UART_Tx_Idle
  L_interrupt0
  L_interrupt1
  L_interrupt2
  L_interrupt3
  L_interrupt4
  L_main5
  L_main6
  L_end_newline
  _newline
  L_end_interrupt
  _interrupt
  L__interrupt9
  L_end_main
  _main
  L_UART1_Init0
  L_UART1_Init1
  L_UART1_Read2
  L_UART1_Write3
  L_UART1_Write4
  L_UART1_Write_Text5
  L_UART1_Write_Text6
  L_UART1_Read_Text7
  L_UART1_Read_Text8
  L_UART1_Read_Text9
  L_UART1_Read_Text10
  L_UART1_Read_Text11
  L_UART1_Read_Text12
  L_UART1_Read_Text13
  L_UART1_Read_Text14
  L_UART1_Read_Text15
  L_UART_Write_Text16
  L_UART_Write_Text17
  L_UART_Read_Text18
  L_UART_Read_Text19
  L_UART_Read_Text20
  L_UART_Read_Text21
  L_UART_Read_Text22
  L_UART_Read_Text23
  L_UART_Read_Text24
  L_UART_Read_Text25
  L_UART_Read_Text26
  L_end_UART1_Init
  _UART1_Init
  L_end_UART1_Data_Ready
  _UART1_Data_Ready
  L_end_UART1_Read
  _UART1_Read
  L_end_UART1_Tx_Idle
  _UART1_Tx_Idle
  L_end_UART1_Write
  _UART1_Write
  L_end_UART1_Write_Text
  _UART1_Write_Text
  L_end_UART1_Read_Text
  _UART1_Read_Text
  L_end_UART_Set_Active
  _UART_Set_Active
  L_end_UART_Write
  _UART_Write
  L_end_UART_Write_Text
  _UART_Write_Text
  L_end_UART_Read
  _UART_Read
  L_end_UART_Data_Ready
  _UART_Data_Ready
  L_end_UART_Read_Text
  _UART_Read_Text
  L_end_UART_Tx_Idle
  _UART_Tx_Idle
